// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  username  String
  email     String     @unique
  clerkId   String     @unique
  snippets  Snippet[]
  favorites Favorite[]
  trashed   Trash[]
  tags      Tag[]
  createdAt DateTime   @default(now())
}

model Tag {
  id        String       @id @default(uuid())
  name      String
  snippets  SnippetTag[]
  user      User?        @relation(fields: [userId], references: [id])
  userId    String?
  createdAt DateTime     @default(now())

  @@unique([name, userId])
}

model Snippet {
  id        String       @id @default(uuid())
  title     String
  content   String
  language  String
  userId    String
  user      User         @relation(fields: [userId], references: [id])
  tags      SnippetTag[]
  favorites Favorite[]
  trash     Trash?
  createdAt DateTime     @default(now())
}

model SnippetTag {
  snippet   Snippet @relation(fields: [snippetId], references: [id])
  snippetId String
  tag       Tag     @relation(fields: [tagId], references: [id])
  tagId     String

  @@id([snippetId, tagId])
}

model Favorite {
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  snippet   Snippet  @relation(fields: [snippetId], references: [id])
  snippetId String
  createdAt DateTime @default(now())

  @@id([userId, snippetId])
}

model Trash {
  snippet   Snippet  @relation(fields: [snippetId], references: [id])
  snippetId String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  deletedAt DateTime @default(now())

  @@id([snippetId, userId])
}
